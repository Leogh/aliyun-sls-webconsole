//
   Created by roman on 8/12/16.

extends ../../layout

block stylesheets
  style.
    .col-title {
      width: 250px;
    }
    .col-cron-expr {
      width: 150px;
    }
    .col-fallback-cond {
      width: 100px;
    }
    .col-observers {
      width: 250px;
    }
    .col-state {
      width: 500px;
    }
    .col-actions {
      width: 100px;
    }


block scripts


block content
  input#controllerPath(type='hidden', value='consoles/notification/notification-pool-controller')
  div(ng-controller='NotificationPoolController as vm')
    div.row
      div.col-sm-12
        h3 Notification Pool(s) Configuration Central &nbsp;&nbsp;
          button.btn.btn-primary.btn-sm(ng-click='vm.actions.addOrUpdatePool()') Add a Pool
          | &nbsp;&nbsp;
          button.btn.btn-primary.btn-sm(ng-click='vm.actions.refreshPoolState()') Refresh State

    div.row
      div.col-sm-12
        table.table.table-bordered
          thead
            tr
              th.col-title Title
              th.col-cron-expr Cron Expression &nbsp;
                a(href='https://github.com/node-schedule/node-schedule#cron-style-scheduling', title='About cron-like expression', target='_blank')
                  i.glyphicon.glyphicon-question-sign
              th.col-targets Targets
              th.col-fallback-cond Fallback Cond.
              th.col-observers Observers
              th.col-state Running State
              th.col-actions Actions
          tbody
            tr(ng-repeat='pool in vm.pools', data-obj-id='{{ pool._id }}')
              td {{ pool.title }}
              td {{ pool.cron }}
              td
                div(ng-repeat='target in pool.targets')
                  strong # {{ $index + 1 }}
                  pre.target-json-container {{ target | json }}
              td
                p
                  strong Log Level:
                  br
                  span {{ pool.level ? pool.level : 'N/A' }}
                p
                  strong Threshold:
                  br
                  span {{ pool.threshold ? pool.threshold : 'N/A' }}

              td
                p(ng-repeat='ob in pool.observers') {{ ob }}

              td
                pre.state-json-container {{ vm.poolRunState(pool._id) | json }}
              td
                p
                  button.btn.btn-primary.btn-sm(ng-click='vm.actions.addOrUpdatePool(pool)', ng-diabled='vm.states.cmdExecuting') Edit
                p
                  button.btn.btn-primary.btn-sm(ng-click='vm.actions.removePool(pool)', ng-diabled='vm.states.cmdExecuting') Remove
                p
                  button.btn.btn-success.btn-sm(ng-click='vm.actions.restartPool(pool)', ng-diabled='vm.states.cmdExecuting') Restart
                p
                  button.btn.btn-danger.btn-sm(ng-click='vm.actions.stopPool(pool)', ng-diabled='vm.states.cmdExecuting') Stop


  script(type='text/ng-template', id='notification-pool-config-modal.html')
    div.modal-header
      div.pull-right
        a(href='https://github.com/DidaTravel/aliyun-sls-notification-service', title='How to config?', target='_blank')
          i.glyphicon.glyphicon-question-sign
          | &nbsp;How to config
      h3.modal-title {{ modal.isForAdd ? 'Add a' : 'Edit' }} Notification Pool &nbsp;
    div.modal-body
      include ../../includes/notification/notification-pool-config-form

    div.modal-footer
      button.btn.btn-primary(ng-click='modal.actions.save()') {{ modal.isForAdd ? 'Add' : 'Save' }}
      button.btn.btn-default(ng-click='modal.actions.dismiss()') Dismiss
